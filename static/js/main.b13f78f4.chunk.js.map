{"version":3,"sources":["components/Footer/Footer.js","data/constants.js","utils/index.js","components/Link/Link.js","components/AppInfo/AppInfo.js","components/Button/Button.js","components/QuoteCard/QuoteSign/QuoteSign.js","components/QuoteCard/QuoteSentence/QuoteSentence.js","components/QuoteCard/QuoteAuthor/QuoteAuthor.js","components/QuoteCard/QuoteTriangle/QuoteTriangle.js","components/QuoteCard/QuoteCard.js","data/reducer.js","data/actions.js","data/context.js","components/QuoteHolder/QuoteHolder.js","App.js","index.js"],"names":["Footer","linksData","useRef","url","name","className","current","ActionTypes","Object","freeze","GET_QUOTE_REQUEST","GET_QUOTE_SUCCESS","GET_QUOTE_ERROR","ViewTypes","NORMAL","SHRINKED","getViewType","shouldBeShrinked","content","view","length","getSentenceStyle","fontSize","marginBottom","Link","href","target","rel","AppInfo","title","message","isError","Button","onClick","children","QuoteSign","alt","src","QuoteSentence","style","QuoteAuthor","QuoteTriangle","QuoteCard","author","mediaQueryList","matchMedia","useState","matches","setView","handleChangeView","useCallback","mqle","useEffect","mql","addEventListener","removeEventListener","INITIAL_STATE","data","error","isLoading","quoteReducer","state","action","type","payload","getRandomQuote","dispatch","a","async","fetch","response","ok","json","QuoteContext","createContext","Provider","QuoteProvider","useReducer","value","actions","QuoteHolder","useContext","handleAction","renderContent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b13f78f4.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nimport { Link } from \"components\";\r\n\r\nconst Footer = () => {\r\n  const linksData = useRef([\r\n    {\r\n      url: \"https://github.com/lukePeavey/quotable\",\r\n      name: \"Random Quotes API\",\r\n    },\r\n    { url: \"https://github.com/lukePeavey\", name: \"Luke Peavey\" },\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className=\"footer__app-name\">Random Quote Machine by Bart Krolak</p>\r\n      <p className=\"footer__api-info\">\r\n        <Link {...linksData.current[0]} />\r\n        {\" by \"}\r\n        <Link {...linksData.current[1]} />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const ActionTypes = Object.freeze({\r\n  GET_QUOTE_REQUEST: \"GET_QUOTE_REQUEST\",\r\n  GET_QUOTE_SUCCESS: \"GET_QUOTE_SUCCESS\",\r\n  GET_QUOTE_ERROR: \"GET_QUOTE_ERROR\",\r\n});\r\n\r\nexport const ViewTypes = Object.freeze({\r\n  NORMAL: \"normal\",\r\n  SHRINKED: \"shrinked\",\r\n});\r\n\r\nexport const API = \"https://api.quotable.io/random\";\r\n","import { ViewTypes } from \"data/constants\";\r\n\r\nexport const isUrl = function (props, propName, componentName) {\r\n  const regex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\r\n\r\n  if (!regex.test(props[propName])) {\r\n    return new Error(\r\n      `Invalid prop '${propName}' passed to '${componentName}'. Expected a valid url address.`\r\n    );\r\n  }\r\n};\r\n\r\nexport const getMediaQueryList = () =>\r\n  matchMedia(\"screen and (max-width: 667px) and (max-height: 568px)\");\r\n\r\nexport const getViewType = (shouldBeShrinked, content) => {\r\n  let view = ViewTypes.NORMAL;\r\n\r\n  if (content.length >= 155 && shouldBeShrinked) {\r\n    view = ViewTypes.SHRINKED;\r\n  }\r\n\r\n  return view;\r\n};\r\n\r\nexport const getSentenceStyle = (view) =>\r\n  view === ViewTypes.SHRINKED\r\n    ? { fontSize: \"16px\", marginBottom: \"10px\" }\r\n    : null;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Link.scss\";\r\n\r\nimport { isUrl } from \"utils\";\r\n\r\nconst Link = ({ url, name }) => (\r\n  <a className=\"link\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    {name}\r\n  </a>\r\n);\r\n\r\nLink.propTypes = {\r\n  url: isUrl,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Link;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./AppInfo.scss\";\r\n\r\nconst AppInfo = ({ title, message, isError }) => {\r\n  return (\r\n    <div\r\n      className={isError ? \"app-info app-info--is-showing-error\" : \"app-info\"}\r\n    >\r\n      <h1 className=\"app-info__title\">{title}</h1>\r\n      <p className=\"app-info__details\">{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nAppInfo.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  isError: PropTypes.bool,\r\n};\r\n\r\nexport default AppInfo;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ onClick, children }) => {\r\n  return (\r\n    <button className=\"btn\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport \"./QuoteSign.scss\";\r\n\r\nconst QuoteSign = () => {\r\n  return <img className=\"quote-sign\" alt=\"quote sign\" src=\"quote.svg\" />;\r\n};\r\n\r\nexport default QuoteSign;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./QuoteSentence.scss\";\r\n\r\nconst QuoteSentence = ({ children, style }) => {\r\n  return (\r\n    <p className=\"quote-sentence\" style={style}>\r\n      {children}\r\n    </p>\r\n  );\r\n};\r\n\r\nQuoteSentence.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  style: PropTypes.objectOf(PropTypes.string),\r\n};\r\n\r\nexport default QuoteSentence;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./QuoteAuthor.scss\";\r\n\r\nconst QuoteAuthor = ({ children }) => {\r\n  return <p className=\"quote-author\">{children}</p>;\r\n};\r\n\r\nQuoteAuthor.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default QuoteAuthor;\r\n","import React from \"react\";\r\n\r\nimport \"./QuoteTriangle.scss\";\r\n\r\nconst QuoteTriangle = () => {\r\n  return <div className=\"quote-triangle\"></div>;\r\n};\r\n\r\nexport default QuoteTriangle;\r\n","import React from \"react\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport \"./QuoteCard.scss\";\r\n\r\nimport { QuoteSign } from \"./QuoteSign\";\r\nimport { QuoteSentence } from \"./QuoteSentence\";\r\nimport { QuoteAuthor } from \"./QuoteAuthor\";\r\nimport { QuoteTriangle } from \"./QuoteTriangle\";\r\n\r\nimport { getMediaQueryList, getViewType, getSentenceStyle } from \"utils\";\r\n\r\nconst QuoteCard = ({ content, author }) => {\r\n  const mediaQueryList = getMediaQueryList();\r\n\r\n  const [view, setView] = useState(() =>\r\n    getViewType(mediaQueryList.matches, content)\r\n  );\r\n\r\n  const handleChangeView = useCallback(\r\n    (mqle) => setView(getViewType(mqle.matches, content)),\r\n    [content]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const mql = mediaQueryList;\r\n\r\n    mql.addEventListener(\"change\", handleChangeView);\r\n\r\n    return () => mql.removeEventListener(\"change\", handleChangeView);\r\n  }, [handleChangeView, mediaQueryList]);\r\n\r\n  return (\r\n    <div className=\"quote-card\">\r\n      <QuoteSign />\r\n      <section className=\"quote-card__body\">\r\n        <QuoteSentence style={getSentenceStyle(view)}>{content}</QuoteSentence>\r\n        <QuoteAuthor>{author}</QuoteAuthor>\r\n      </section>\r\n      <QuoteTriangle />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteCard;\r\n","import { ActionTypes } from \"data/constants\";\r\n\r\nconst { GET_QUOTE_REQUEST, GET_QUOTE_SUCCESS, GET_QUOTE_ERROR } = ActionTypes;\r\n\r\nexport const INITIAL_STATE = {\r\n  data: null,\r\n  error: null,\r\n  isLoading: false,\r\n};\r\n\r\nexport const quoteReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_QUOTE_REQUEST:\r\n      return { ...state, data: null, error: null, isLoading: true };\r\n    case GET_QUOTE_SUCCESS:\r\n      return { ...state, data: payload, error: null, isLoading: false };\r\n    case GET_QUOTE_ERROR:\r\n      return { ...state, data: null, error: payload, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionTypes, API } from \"data/constants\";\r\n\r\nconst { GET_QUOTE_REQUEST, GET_QUOTE_SUCCESS, GET_QUOTE_ERROR } = ActionTypes;\r\n\r\nexport const getRandomQuote = (dispatch) => async () => {\r\n  try {\r\n    dispatch({ type: GET_QUOTE_REQUEST });\r\n    const response = await fetch(API);\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      dispatch({ type: GET_QUOTE_SUCCESS, payload: data });\r\n    } else {\r\n      const error = await response.json();\r\n      dispatch({ type: GET_QUOTE_ERROR, payload: error });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: GET_QUOTE_ERROR, payload: error });\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { INITIAL_STATE, quoteReducer } from \"data/reducer\";\r\nimport { getRandomQuote } from \"data/actions\";\r\n\r\nexport const QuoteContext = createContext({});\r\n\r\nconst { Provider } = QuoteContext;\r\n\r\nexport const QuoteProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(quoteReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <Provider\r\n      value={{ state, actions: { getRandomQuote: getRandomQuote(dispatch) } }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nQuoteProvider.propTypes = { children: PropTypes.element.isRequired };\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport \"./QuoteHolder.scss\";\r\n\r\nimport { QuoteCard, AppInfo, Button } from \"components\";\r\nimport { QuoteContext } from \"data/context\";\r\n\r\nconst QuoteHolder = () => {\r\n  const {\r\n    state,\r\n    actions: { getRandomQuote },\r\n  } = useContext(QuoteContext);\r\n\r\n  useEffect(() => {\r\n    getRandomQuote();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const renderContent = (state, handleAction) => {\r\n    const { isLoading, data, error } = state;\r\n    let content = null;\r\n\r\n    if (data) {\r\n      content = (\r\n        <>\r\n          <QuoteCard {...data} />\r\n          <Button onClick={handleAction}>Get a new quote</Button>\r\n        </>\r\n      );\r\n    } else if (error) {\r\n      content = (\r\n        <>\r\n          <AppInfo\r\n            title={\"Something went wrong.\"}\r\n            message={error.message}\r\n            isError\r\n          />\r\n          <Button onClick={handleAction}>Try again</Button>\r\n        </>\r\n      );\r\n    } else if (isLoading) {\r\n      content = (\r\n        <AppInfo\r\n          title={\"Loading new quote.\"}\r\n          message={\"Please wait for a while...\"}\r\n        />\r\n      );\r\n    }\r\n\r\n    return content;\r\n  };\r\n\r\n  return (\r\n    <div className=\"quote-holder\">{renderContent(state, getRandomQuote)}</div>\r\n  );\r\n};\r\n\r\nexport default QuoteHolder;\r\n","import React from \"react\";\n\nimport { QuoteHolder, Footer } from \"components\";\nimport { QuoteProvider } from \"data/context\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteProvider>\n        <QuoteHolder />\n      </QuoteProvider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}